INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]
    [INTO] tbl_name
    [PARTITION (partition_name,...)] 
    [(col_name,...)]
    {VALUES | VALUE} ({expr | DEFAULT},...),(...),...
    [ ON DUPLICATE KEY UPDATE
      col_name=expr
        [, col_name=expr] ... ]
Or:

INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]
    [INTO] tbl_name
    [PARTITION (partition_name,...)]
    SET col_name={expr | DEFAULT}, ...
    [ ON DUPLICATE KEY UPDATE
      col_name=expr
        [, col_name=expr] ... ]
Or:

INSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]
    [INTO] tbl_name
    [PARTITION (partition_name,...)] 
    [(col_name,...)]
    SELECT ...
    [ ON DUPLICATE KEY UPDATE
      col_name=expr
        [, col_name=expr] ... ]


INSERT DELAYED is deprecated (не использовать DELAYED)


INSERT tbl_name (col1,col2) VALUES(15,col1*2); ???
INSERT INTO tbl_name (col1,col2) VALUES(15,col1*2);
INSERT INTO tbl_name (a,b,c) VALUES(1,2,3),(4,5,6),(7,8,9);

INSERT INTO tbl_name SET col1 = 15, col2 = col1*2

INSERT INTO tbl_temp2 (fld_id)
    SELECT tbl_temp1.fld_order_id
        FROM tbl_temp1 WHERE tbl_temp1.fld_order_id > 100;
INSERT INTO t2 (b, c)
    VALUES ((SELECT a FROM t1 WHERE b='Chip'), 'shoulder'),
        ((SELECT a FROM t1 WHERE b='Chip'), 'old block'),
        ((SELECT a FROM t1 WHERE b='John'), 'toilet'),
        ((SELECT a FROM t1 WHERE b='John'), 'long,silver'),
        ((SELECT a FROM t1 WHERE b='John'), 'li''l');

INSERT INTO table (a,b,c) VALUES (1,2,3)
  ON DUPLICATE KEY UPDATE c=c+1;
(ON DUPLICATE KEY UPDATE c=c+1;  ---> UPDATE table SET c=c+1 WHERE a=1;)



--Добавление в таблицу 	test ряда с указанными значениями в порядке, в котором была создана таблица
INSERT INTO test 
	VALUES (NULL, 'Tовар1', 123),	-- id не указан(NULL), поэтому он сам сформируется если у него есть AUTO_INCREMENT. Но можно его задать, напр. 23.
		(NULL, 'Tовар2', 123),
		(NULL, 'Tовар3', 123);
	
	
--Добавление в таблицу 	test
INSERT INTO test (name, price)
	VALUES ('Товар1', 123.5),	-- значения неуказанных полей примут значения NOT NULL	DEFAULT (если его нет то NULL)
		('Tовар2', 123),
		('Tовар3', 123);
	
	
--Добавление в таблицу 	test ряда с указанными значениями в порядке, в котором была создана таблица
INSERT IGNORE INTO test 
	VALUES (12, 'Tовар1', 123),	-- если id=12 уже есть то эта запись игнорируется IGNORE(пропускается), а остальные вставляются. Без IGNORE все записи после ошибочной проигнорируются.
		(23, 'Tовар2', 123),
		(24, 'Tовар3', 123);	

--для задания приоритета выполнения запроса можно задать 
INSERT LOW_PRIORITY [или DELAYED или HIGH_PRIORITY] IGNORE INTO test VALUES .....;


// Полные варианты INSERT - выражений

INSERT HIGH_PRIORITY IGNORE INTO tbl_name
    PARTITION (partition_name,...) 
    (col_name,...)
    VALUES ({expr | DEFAULT},...),(...),...
    ON DUPLICATE KEY UPDATE
      col_name=expr
     [, col_name=expr] ... 
Or:

INSERT HIGH_PRIORITY IGNORE 
    INTO tbl_name
    PARTITION (partition_name,...)
    SET col_name={expr | DEFAULT}, ...
    ON DUPLICATE KEY UPDATE
      col_name=expr
        [, col_name=expr] ... 
Or:

INSERT HIGH_PRIORITY IGNORE
    INTO tbl_name
    PARTITION (partition_name,...)
    (col_name,...)
    SELECT ...
    ON DUPLICATE KEY UPDATE
      col_name=expr
        [, col_name=expr] ... 



1) Сделать шаблон добавления INSERT INTO tbl_name() VALUES(): 
    INSERT INTO tbl_name VALUES(null,2,3);
    INSERT INTO tbl_name VALUES(null,2,3),(null,5,6),(null,8,9);

    INSERT INTO tbl_name (a,b,c) VALUES(1,2,3);
    INSERT INTO tbl_name (a,b,c) VALUES(1,2,3),(4,5,6),(7,8,9);

    INSERT INTO tbl_name (a,b,c) VALUES((SELECT...), (SELECT...), (SELECT...));
    INSERT INTO tbl_name (a,b,c) VALUES
        ((SELECT...), (SELECT...), (SELECT...)),
        ((SELECT...), (SELECT...), (SELECT...)),    
        ((SELECT...), (SELECT...), (SELECT...));

    INSERT INTO tbl_name (a,b,c) VALUES(1,2,3) аналогичен выражению 
    INSERT INTO tbl_name SET a=1, b=2, c=3 , поэтому нет смысла делать отдельный шаблон для INSERT SET
    Но для задания значения типа [['a'=> 1], ['b'=> 2], ['c'=> 3]] использовать отдельный методв Insert::set(array)

    Шаблон INSERT должен базироваться только на выражении:
    INSERT INTO tbl_name() VALUES();

2) Сделать шаблон добавления INSERT INTO tbl_name() SELECT...
